program PROGRAM_NAME
option +s;
option -c;

VALUE_TYPE flags[160];
VALUE_TYPE flags_from_bpms[160];

assign flags to "{P}{R}{TARGET}";
assign flags_from_bpms to {
    "SI-01M2:DI-BPM:{TARGET}",
    "SI-01C1:DI-BPM-1:{TARGET}",
    "SI-01C1:DI-BPM-2:{TARGET}",
    "SI-01C2:DI-BPM:{TARGET}",
    "SI-01C3:DI-BPM-1:{TARGET}",
    "SI-01C3:DI-BPM-2:{TARGET}",
    "SI-01C4:DI-BPM:{TARGET}",
    "SI-02M1:DI-BPM:{TARGET}",
    "SI-02M2:DI-BPM:{TARGET}",
    "SI-02C1:DI-BPM-1:{TARGET}",
    "SI-02C1:DI-BPM-2:{TARGET}",
    "SI-02C2:DI-BPM:{TARGET}",
    "SI-02C3:DI-BPM-1:{TARGET}",
    "SI-02C3:DI-BPM-2:{TARGET}",
    "SI-02C4:DI-BPM:{TARGET}",
    "SI-03M1:DI-BPM:{TARGET}",
    "SI-03M2:DI-BPM:{TARGET}",
    "SI-03C1:DI-BPM-1:{TARGET}",
    "SI-03C1:DI-BPM-2:{TARGET}",
    "SI-03C2:DI-BPM:{TARGET}",
    "SI-03C3:DI-BPM-1:{TARGET}",
    "SI-03C3:DI-BPM-2:{TARGET}",
    "SI-03C4:DI-BPM:{TARGET}",
    "SI-04M1:DI-BPM:{TARGET}",
    "SI-04M2:DI-BPM:{TARGET}",
    "SI-04C1:DI-BPM-1:{TARGET}",
    "SI-04C1:DI-BPM-2:{TARGET}",
    "SI-04C2:DI-BPM:{TARGET}",
    "SI-04C3:DI-BPM-1:{TARGET}",
    "SI-04C3:DI-BPM-2:{TARGET}",
    "SI-04C4:DI-BPM:{TARGET}",
    "SI-05M1:DI-BPM:{TARGET}",
    "SI-05M2:DI-BPM:{TARGET}",
    "SI-05C1:DI-BPM-1:{TARGET}",
    "SI-05C1:DI-BPM-2:{TARGET}",
    "SI-05C2:DI-BPM:{TARGET}",
    "SI-05C3:DI-BPM-1:{TARGET}",
    "SI-05C3:DI-BPM-2:{TARGET}",
    "SI-05C4:DI-BPM:{TARGET}",
    "SI-06M1:DI-BPM:{TARGET}",
    "SI-06M2:DI-BPM:{TARGET}",
    "SI-06C1:DI-BPM-1:{TARGET}",
    "SI-06C1:DI-BPM-2:{TARGET}",
    "SI-06C2:DI-BPM:{TARGET}",
    "SI-06C3:DI-BPM-1:{TARGET}",
    "SI-06C3:DI-BPM-2:{TARGET}",
    "SI-06C4:DI-BPM:{TARGET}",
    "SI-07M1:DI-BPM:{TARGET}",
    "SI-07M2:DI-BPM:{TARGET}",
    "SI-07C1:DI-BPM-1:{TARGET}",
    "SI-07C1:DI-BPM-2:{TARGET}",
    "SI-07C2:DI-BPM:{TARGET}",
    "SI-07C3:DI-BPM-1:{TARGET}",
    "SI-07C3:DI-BPM-2:{TARGET}",
    "SI-07C4:DI-BPM:{TARGET}",
    "SI-08M1:DI-BPM:{TARGET}",
    "SI-08M2:DI-BPM:{TARGET}",
    "SI-08C1:DI-BPM-1:{TARGET}",
    "SI-08C1:DI-BPM-2:{TARGET}",
    "SI-08C2:DI-BPM:{TARGET}",
    "SI-08C3:DI-BPM-1:{TARGET}",
    "SI-08C3:DI-BPM-2:{TARGET}",
    "SI-08C4:DI-BPM:{TARGET}",
    "SI-09M1:DI-BPM:{TARGET}",
    "SI-09M2:DI-BPM:{TARGET}",
    "SI-09C1:DI-BPM-1:{TARGET}",
    "SI-09C1:DI-BPM-2:{TARGET}",
    "SI-09C2:DI-BPM:{TARGET}",
    "SI-09C3:DI-BPM-1:{TARGET}",
    "SI-09C3:DI-BPM-2:{TARGET}",
    "SI-09C4:DI-BPM:{TARGET}",
    "SI-10M1:DI-BPM:{TARGET}",
    "SI-10M2:DI-BPM:{TARGET}",
    "SI-10C1:DI-BPM-1:{TARGET}",
    "SI-10C1:DI-BPM-2:{TARGET}",
    "SI-10C2:DI-BPM:{TARGET}",
    "SI-10C3:DI-BPM-1:{TARGET}",
    "SI-10C3:DI-BPM-2:{TARGET}",
    "SI-10C4:DI-BPM:{TARGET}",
    "SI-11M1:DI-BPM:{TARGET}",
    "SI-11M2:DI-BPM:{TARGET}",
    "SI-11C1:DI-BPM-1:{TARGET}",
    "SI-11C1:DI-BPM-2:{TARGET}",
    "SI-11C2:DI-BPM:{TARGET}",
    "SI-11C3:DI-BPM-1:{TARGET}",
    "SI-11C3:DI-BPM-2:{TARGET}",
    "SI-11C4:DI-BPM:{TARGET}",
    "SI-12M1:DI-BPM:{TARGET}",
    "SI-12M2:DI-BPM:{TARGET}",
    "SI-12C1:DI-BPM-1:{TARGET}",
    "SI-12C1:DI-BPM-2:{TARGET}",
    "SI-12C2:DI-BPM:{TARGET}",
    "SI-12C3:DI-BPM-1:{TARGET}",
    "SI-12C3:DI-BPM-2:{TARGET}",
    "SI-12C4:DI-BPM:{TARGET}",
    "SI-13M1:DI-BPM:{TARGET}",
    "SI-13M2:DI-BPM:{TARGET}",
    "SI-13C1:DI-BPM-1:{TARGET}",
    "SI-13C1:DI-BPM-2:{TARGET}",
    "SI-13C2:DI-BPM:{TARGET}",
    "SI-13C3:DI-BPM-1:{TARGET}",
    "SI-13C3:DI-BPM-2:{TARGET}",
    "SI-13C4:DI-BPM:{TARGET}",
    "SI-14M1:DI-BPM:{TARGET}",
    "SI-14M2:DI-BPM:{TARGET}",
    "SI-14C1:DI-BPM-1:{TARGET}",
    "SI-14C1:DI-BPM-2:{TARGET}",
    "SI-14C2:DI-BPM:{TARGET}",
    "SI-14C3:DI-BPM-1:{TARGET}",
    "SI-14C3:DI-BPM-2:{TARGET}",
    "SI-14C4:DI-BPM:{TARGET}",
    "SI-15M1:DI-BPM:{TARGET}",
    "SI-15M2:DI-BPM:{TARGET}",
    "SI-15C1:DI-BPM-1:{TARGET}",
    "SI-15C1:DI-BPM-2:{TARGET}",
    "SI-15C2:DI-BPM:{TARGET}",
    "SI-15C3:DI-BPM-1:{TARGET}",
    "SI-15C3:DI-BPM-2:{TARGET}",
    "SI-15C4:DI-BPM:{TARGET}",
    "SI-16M1:DI-BPM:{TARGET}",
    "SI-16M2:DI-BPM:{TARGET}",
    "SI-16C1:DI-BPM-1:{TARGET}",
    "SI-16C1:DI-BPM-2:{TARGET}",
    "SI-16C2:DI-BPM:{TARGET}",
    "SI-16C3:DI-BPM-1:{TARGET}",
    "SI-16C3:DI-BPM-2:{TARGET}",
    "SI-16C4:DI-BPM:{TARGET}",
    "SI-17M1:DI-BPM:{TARGET}",
    "SI-17M2:DI-BPM:{TARGET}",
    "SI-17C1:DI-BPM-1:{TARGET}",
    "SI-17C1:DI-BPM-2:{TARGET}",
    "SI-17C2:DI-BPM:{TARGET}",
    "SI-17C3:DI-BPM-1:{TARGET}",
    "SI-17C3:DI-BPM-2:{TARGET}",
    "SI-17C4:DI-BPM:{TARGET}",
    "SI-18M1:DI-BPM:{TARGET}",
    "SI-18M2:DI-BPM:{TARGET}",
    "SI-18C1:DI-BPM-1:{TARGET}",
    "SI-18C1:DI-BPM-2:{TARGET}",
    "SI-18C2:DI-BPM:{TARGET}",
    "SI-18C3:DI-BPM-1:{TARGET}",
    "SI-18C3:DI-BPM-2:{TARGET}",
    "SI-18C4:DI-BPM:{TARGET}",
    "SI-19M1:DI-BPM:{TARGET}",
    "SI-19M2:DI-BPM:{TARGET}",
    "SI-19C1:DI-BPM-1:{TARGET}",
    "SI-19C1:DI-BPM-2:{TARGET}",
    "SI-19C2:DI-BPM:{TARGET}",
    "SI-19C3:DI-BPM-1:{TARGET}",
    "SI-19C3:DI-BPM-2:{TARGET}",
    "SI-19C4:DI-BPM:{TARGET}",
    "SI-20M1:DI-BPM:{TARGET}",
    "SI-20M2:DI-BPM:{TARGET}",
    "SI-20C1:DI-BPM-1:{TARGET}",
    "SI-20C1:DI-BPM-2:{TARGET}",
    "SI-20C2:DI-BPM:{TARGET}",
    "SI-20C3:DI-BPM-1:{TARGET}",
    "SI-20C3:DI-BPM-2:{TARGET}",
    "SI-20C4:DI-BPM:{TARGET}",
    "SI-01M1:DI-BPM:{TARGET}"
};
monitor flags_from_bpms;

evflag flags_from_bpms_event;
sync flags_from_bpms to flags_from_bpms_event;

ss scan {
    int is_all_zero;
    int i;

    state all_zero {
        entry {
            is_all_zero = 1;
        }

        when (!is_all_zero) {
        } state update

        when (efTestAndClear(flags_from_bpms_event)) {
            for (i = 0; i < 160; i++) {
                flags[i] = flags_from_bpms[i];
                if (flags[i]) is_all_zero = 0;
            }
            pvPut(flags, SYNC);
        } state all_zero
    }

    state update {
        when (is_all_zero) {
        } state all_zero

        when (delay(.1) && efTestAndClear(flags_from_bpms_event)) {
            int or_flags = 0;
            for (i = 0; i < 160; i++) {
                flags[i] = flags_from_bpms[i];
                or_flags |= !!flags[i];
            }
            is_all_zero = !or_flags;
            pvPut(flags, SYNC);
        } state update
    }
}
